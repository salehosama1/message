@page
@model IndexModel
@{
    ViewData["Title"] = "Chat";
}

<h2>SignalR Chat</h2>

<div>
    <label>Your Id (for demo):</label>
    <input id="userId" value="user1" />

    <label>Chat with (leave empty for public):</label>
    <input id="otherUserId" placeholder="other user id or empty for public" />
</div>

<div>
    <input type="text" id="messageInput" placeholder="Write a message..." />
    <button onclick="sendMessage()">Send</button>

    <!-- 🌍 Map Icon Button -->
    <button id="mapBtn" style="background:none; border:none; cursor:pointer; margin-left:10px;">
        <img src="https://cdn-icons-png.flaticon.com/512/684/684908.png"
             alt="Map" width="32" height="32">
    </button>
</div>

<ul id="messagesList"></ul>

<!-- Map Modal -->
<div id="mapModal" style="display:none; position:fixed; top:0; left:0;
     width:100%; height:100%; background:rgba(0,0,0,0.7); z-index:1000;">
    <div style="width:80%; height:80%; margin:5% auto; background:white; position:relative; border-radius:8px; overflow:hidden;">
        <button onclick="closeMap()" style="position:absolute; top:10px; right:10px; z-index:1001;">❌</button>
        <div id="map" style="width:100%; height:100%;"></div>
    </div>
</div>

<!-- SignalR script -->
<script src="https://cdnjs.cloudflare.com/ajax/libs/microsoft-signalr/7.0.5/signalr.min.js"></script>

<script>
    // ========================
    // SignalR Chat Logic
    // ========================
    const connection = new signalR.HubConnectionBuilder()
        .withUrl("/chatHub")
        .build();

    connection.on("ReceiveMessage", (msg) => {
        const li = document.createElement("li");
        if (msg.receiverId) {
            li.textContent = `[Private] ${msg.senderId} → ${msg.receiverId}: ${msg.text}`;
        } else {
            li.textContent = `${msg.senderId}: ${msg.text}`;
        }
        document.getElementById("messagesList").appendChild(li);
    });

    connection.on("UserTyping", (userId, isTyping) => {
        console.log(`${userId} is ${isTyping ? "typing..." : "stopped typing"}`);
    });

    connection.start().then(() => {
        const userId = document.getElementById("userId").value;
        connection.invoke("Register", userId);
    }).catch(err => console.error(err.toString()));

    function sendMessage() {
        const senderId = document.getElementById("userId").value;
        const receiverId = document.getElementById("otherUserId").value;
        const text = document.getElementById("messageInput").value;

        connection.invoke("SendMessage", senderId, receiverId, text)
            .catch(err => console.error(err.toString()));

        document.getElementById("messageInput").value = "";
    }

    const messageInput = document.getElementById("messageInput");
    messageInput.addEventListener("input", () => {
        const userId = document.getElementById("userId").value;
        const receiverId = document.getElementById("otherUserId").value;
        connection.invoke("Typing", userId, receiverId, messageInput.value.length > 0);
    });

    // ========================
    // Google Maps Logic
    // ========================
    document.getElementById("mapBtn").addEventListener("click", function () {
        document.getElementById("mapModal").style.display = "block";
        initMap();
    });

    function closeMap() {
        document.getElementById("mapModal").style.display = "none";
    }

    function initMap() {
        if (navigator.geolocation) {
            navigator.geolocation.getCurrentPosition(function (position) {
                const userLocation = {
                    lat: position.coords.latitude,
                    lng: position.coords.longitude
                };

                const map = new google.maps.Map(document.getElementById("map"), {
                    center: userLocation,
                    zoom: 4
                });

                new google.maps.Marker({
                    position: userLocation,
                    map: map,
                    title: "You are here!"
                });
            }, function () {
                alert("Unable to fetch your location.");
            });
        } else {
            alert("Geolocation not supported.");
        }
    }

    // Close modal if clicking outside the map box
    window.onclick = function (event) {
        const modal = document.getElementById("mapModal");
        if (event.target === modal) {
            modal.style.display = "none";
        }
    };

    // Close modal with Escape key
    document.addEventListener("keydown", function (event) {
        if (event.key === "Escape") {
            document.getElementById("mapModal").style.display = "none";
        }
    });
</script>

<!-- Google Maps script -->
<script async
        src="https://maps.googleapis.com/maps/api/js?key=AIzaSyDcNBmz7lE-ohjjOQqG6uGUBYjU0UwYtb0&callback=initMap">
</script>