@page
@model IndexModel
@{
    ViewData["Title"] = "Home page";
}

<div class="text-center">
    <h1 class="display-4">Chat + Map</h1>

    <!-- Chat UI -->
    <div>
        <input type="text" id="userInput" placeholder="Your ID" />
        <input type="text" id="otherUserId" placeholder="Receiver ID (blank = public)" />
        <input type="text" id="messageInput" placeholder="Write a message..." />
        <button id="sendButton">Send</button>
    </div>

    <ul id="messagesList"></ul>

    <!-- Map Icon -->
    <button id="mapButton">🌍 Show Map</button>
</div>

<!-- Map Modal -->
<div id="mapModal" style="display:none; position:fixed; top:0; left:0; width:100%; height:100%;
    background-color:rgba(0,0,0,0.7); z-index:1000;">
    <div style="position:relative; margin:auto; top:5%; width:80%; height:80%; background:white; border-radius:10px;">
        <button onclick="closeMap()"
                style="position:absolute; top:10px; right:10px; z-index:1001;">
            ❌
        </button>
        <div id="map" style="width:100%; height:100%;"></div>
    </div>
</div>

@section Scripts {
    <!-- SignalR -->
    <script src="https://cdnjs.cloudflare.com/ajax/libs/microsoft-signalr/7.0.5/signalr.min.js"></script>

    <!-- Google Maps API (no callback) -->
    <script async
            src="https://maps.googleapis.com/maps/api/js?key=AIzaSyDcNBmz7lE-ohjjOQqG6uGUBYjU0UwYtb0">
    </script>

    <script>
        // --- SignalR Setup ---
        const connection = new signalR.HubConnectionBuilder()
            .withUrl("/chatHub")
            .build();

        connection.on("ReceiveMessage", function (message) {
            const li = document.createElement("li");
            li.textContent = `[${message.senderId}] → ${message.text}`;
            document.getElementById("messagesList").appendChild(li);
        });

        document.getElementById("sendButton").addEventListener("click", function () {
            const user = document.getElementById("userInput").value;
            const receiver = document.getElementById("otherUserId").value;
            const text = document.getElementById("messageInput").value;

            connection.invoke("SendMessage", user, receiver, text).catch(err => console.error(err));
        });

        connection.start().catch(err => console.error(err));

        // --- Google Maps ---
        let map;

        function initMap(lat, lng) {
            map = new google.maps.Map(document.getElementById("map"), {
                center: { lat, lng },
                zoom: 6
            });

            new google.maps.Marker({
                position: { lat, lng },
                map: map,
                title: "You are here!"
            });
        }

        document.getElementById("mapButton").addEventListener("click", function () {
            document.getElementById("mapModal").style.display = "block";

            if (navigator.geolocation) {
                navigator.geolocation.getCurrentPosition(
                    position => {
                        initMap(position.coords.latitude, position.coords.longitude);
                    },
                    () => {
                        initMap(30.0444, 31.2357); // Default Cairo
                    }
                );
            } else {
                initMap(30.0444, 31.2357);
            }
        });

        function closeMap() {
            document.getElementById("mapModal").style.display = "none";
        }

        window.onclick = function (event) {
            const modal = document.getElementById("mapModal");
            if (event.target === modal) {
                closeMap();
            }
        };

        document.addEventListener("keydown", function (event) {
            if (event.key === "Escape") {
                closeMap();
            }
        });
    </script>
}